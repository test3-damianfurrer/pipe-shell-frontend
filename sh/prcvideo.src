#!/bin/sh

sourceprcvid(){
[ "$(type -t prcvideo_exit_oedivcrp)" == "function" ] && return 0
  for f in ./sh/prcvideo.d/*.src
  do
    source "${f}"
  done
}

getactions(){
  [ "$fved" ] || echo "fview"; echo "next"; echo "view+"; echo "info"; echo "related"; echo "comments"; echo "addto playlist"; echo "exit"
}

poppresel(){
  sed 's/{;}/{!}/' < /dev/stdin
}

prcvideo(){
[ "$1" == "" ] && exit
  sourceprcvid
  nocache="true"
  preselect="${2}"
  tmp=$(poppresel <<< "${preselect}")
  currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
  preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
  vinf=$(_pipedget "streams/$1")

  title=$(jq -r '.title' <<< "${vinf}")
  relstream=""
  sel="${currpresel}"
  [ "$currpresel" == "" ] && sel=$(getactions | _menu 5 "${title}")
  while [ "$sel" != "next" ]
  do
    sel2="$sel"
    sel=""

    sel3=$(echo -n "$sel2" | tr "[:space:][:cntrl:][:punct:]" "_")
    [ "$(type -t prcvideo_${sel3}_oedivcrp)" == "function" ] && "prcvideo_${sel3}_oedivcrp" "${sel2}"
    [ "$?" -gt "0" ] && { echo "return code exit"; exit 1; }

    if [ "$sel" == "" ]; then
      tmp=$(poppresel <<< "${preselect}")
      currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
      preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
      sel="${currpresel}"
      [ "$currpresel" == "" ] && sel=$(getactions | _menu 5 "${title}" )
    fi
    fved="X"
  done
  unset fved
}

[ "$(type -t ffmpeg_video)" == "function" ] || source ./sh/ffmpeg-video.src
[ "$(type -t view_dash)" == "function" ] || source ./sh/view-dash.src
[ "$(type -t vidinfo)" == "function" ] || source ./sh/vidinfo.src
[ "$(type -t search_video_prcloop)" == "function" ] || source ./sh/search-video-prcloop.src
[ "$(type -t prcchannel)" == "function" ] || source ./sh/prcchannel.src
[ "$(type -t showcomments)" == "function" ] || source ./sh/showcomments.src
[ "$(type -t _menu)" == "function" ]                    || source sh/_menu.src
[ "$(type -t _thumbsel)" == "function" ]            || source sh/_thumbsel.src
[ "$(type -t _pipedget)" == "function" ] || source sh/_pipedget.src
[ "$(type -t create_lplaylist)" == "function" ] || source sh/create-lplaylist.src
