#!/bin/sh
#tst(){
#  "subtitles"
#      "url"
#      "mimeType"
#      "name"
#      "code"
#      "autoGenerated"
#}

prcvideo(){
[ "$1" == "" ] && exit
#  actions=$(echo "next"; echo "view"; echo "info"; echo "description"; echo "related"; echo "view+"; echo "exit")
  #actions=$(echo "next"; echo "view"; echo "info"; echo "related"; echo "view+"; echo "exit")
  actions=$(echo "next"; echo "view+"; echo "info"; echo "related"; echo "comments"; echo "exit")
  vinf=$(curl "https://damianfurrer.ch/yt/streams/$1" 2>/dev/null)
  title=$(jq -r '.title' <<< "${vinf}")
#  curl "https://damianfurrer.ch/yt/streams/$1" 2>/dev/null | jq '.'
#  exit
  relstream=""
  sel=$(echo "$actions" | _menu 5 "${title}")
  while [ "$sel" != "next" ]
  do
    sel2="$sel"
    sel=""
    case "$sel2" in
      "showtmp")
	sxiv tmp.webp #;sel=""
	rm tmp.webp
	sel="info-show"
      ;;
      "back")
	sel="";;
      "view")
        stream=$(jq -r '.hls' <<< "${vinf}")
        mpv "$stream" --no-cache --no-ytdl
	sel=""
      ;;
      "view-dash")
#        stream=$(jq -r '.dash' <<< "${vinf}")
	jq -r '.dash' <<< "${vinf}" | view_dash
        	#mpv "${stream}" --no-cache --no-ytdl
#	ffmpeg -i "${stream}" -c copy -f matroska - 2>/dev/null | mpv - --no-cache --no-ytdl
	#cache is very counter productive, since it tries to max out real time bandwith
	sel=""
      ;;
      "qualselect")
	ffmpeg_video <<< "${vinf}" || echo "failed to select quality" >&2
	sel=""
      ;;
      "loop")
	sel=$((echo "qualselect-loop"; echo "listen-loop") | _menu "" "Loop")
      ;;
      "qualselect-loop")
	loops=$(printf -- '-1\n1\n2\n3\n4\n5\n6\n7\n8\n9' | _menu 10 "loops: ")
	ffmpeg_video "" "$loops" <<< "${vinf}" || echo "failed to select quality" >&2
	sel=""
      ;;
      "listen-loop")
        stream=$(jq -r '.audioStreams' <<< "${vinf}" | streamselect | jq -r '.url')
	mpv "$stream" --loop-file=yes --no-ytdl || echo "failed" >&2
	sel=""
      ;;
      "qualselectRip")
	mkdir -p "saves/$1"
	ffmpeg_video "saves/$1/$1.mkv" <<< "${vinf}" || echo "failed to select quality" >&2
	sel=""
      ;;
      "view+")
	hls=$(jq -r '.hls' <<< "${vinf}" | sed 's/null//')
	dash=$(jq -r '.dash' <<< "${vinf}" | sed 's/null//')
	sel=$(([ "$hls" == "" ] || echo "view";[ "$dash" == "" ] || echo "view-dash";echo "view&"; echo "qualselect";echo "qualselectRip";echo "listen"; echo "loop"; echo "back";) | _menu 10 "view+")
	#sel="view&"
      ;;
      "listen")
        stream=$(jq -r '.audioStreams' <<< "${vinf}" | streamselect | jq -r '.url')
	mpv "$stream" --no-ytdl || echo "failed" >&2
	sel=""
      ;;
      "view&")
        stream=$(jq -r '.hls' <<< "${vinf}")
        mpv "$stream" --no-terminal &
	sel=""
      ;;
      "comments")
	showcomments "$1"
      ;;
      "description")
	xmsgtext=$(vidinfo "$1" "desc"  <<< "${vinf}")
	xmessage -file - -default "okay" <<< "$xmsgtext"
	sel=""
      ;;
      "related")
	[ "$relstream" == "" ] && relstream=$(jq '.relatedStreams[]' <<< "${vinf}")
	#echo "$relstream" > search/result.json
	mkdir -p find
	search_video_prcloop <<< "${relstream}"
	#while read relv
	#do
	#  ./sh/prcvideo.sh "$relv"
	#done <<< $(./sh/search-video-prc.sh <<< "${relstream}")
	sel=""
      ;;
      "info")
	relstream=$(jq '.relatedStreams[]' <<< "${vinf}")
	uploaderAvatar=$(jq '.uploaderAvatar' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	thumbnailUrl=$(jq '.thumbnailUrl' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')

	xmsgtext=$(vidinfo "$1" "info"  <<< "${vinf}")
#	echo "${xmsgtext}"
#	grep "Url: /channel/" <<< "${xmsgtext}" | sed 's/Url: \/channel\///'

	sel="info-show"
      ;;
      "info-show")
	out=0
	xmessage -file - -default "okay" -buttons "okay:0,description:10,Show Channel:50,ChannelThumb:20,Thumb:30,Copy:40" <<< "$xmsgtext" || out=$?
	case $out in
	10)
	  sel="description" ;;
	20)
	  wget -q -O tmp.webp "${uploaderAvatar}"
	  sel="showtmp" ;;
	30)
	  wget -q -O tmp.webp "${thumbnailUrl}"
	  sel="showtmp" ;;
	40)
	  echo "$xmsgtext" >&2
	  sel="";;
	50)
	  prcchannel $(grep "Url: /channel/" <<< "${xmsgtext}" | sed 's/Url: \/channel\///') || sel=""
	  #prcchannel $(echo $uploaderUrl | sed 's/\/channel\///') || sel=""
	  sel="";;
	*)
#	  echo "\$?: $?"
	  sel=""
	;;
	esac
      ;;
      "info2")

	uploadDate=$(jq '.uploadDate' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	dash=$(jq '.dash' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	lbryId=$(jq '.lbryId' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	duration=$(jq '.duration' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	views=$(jq '.views' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	likes=$(jq '.likes' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	dislikes=$(jq '.dislikes' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	livestream=$(jq '.livestream' <<< "${vinf}")
	proxyurl=$(jq '.proxyUrl' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	chapters=$(jq '.chapters' <<< "${vinf}")
	relstream=$(jq '.relatedStreams[]' <<< "${vinf}")

	uploader=$(jq '.uploader' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	uploaderUrl=$(jq '.uploaderUrl'  <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	uploaderVerified=$(jq '.uploaderVerified' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	uploaderSubscriberCount=$(jq '.uploaderSubscriberCount' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')

	uploaderAvatar=$(jq '.uploaderAvatar' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	thumbnailUrl=$(jq '.thumbnailUrl' <<< "${vinf}" | sed 's/^"//' | sed 's/"$//')
	xmsgtext=$(echo "Id: $1";\
	  echo "Title: $title";\
	  echo "Uploaded: $uploadDate";\
	  echo "Duration: $duration";\
	  echo "Views: $views";\
	  echo "Likes: $likes / Dislikes: $dislikes";\
	  echo "livestream: $livestream";\
	  echo "proxy: $proxyurl";\
	  echo "chapters: $chapters";\
	  echo "lbry: $lbryId; dash: $dash";\
	  echo ""; echo "---uploader---";\
	  echo "Channel: $uploader"; echo "Url: $uploaderUrl";echo "Verified: $uploaderVerified";echo "Subscribers: $uploaderSubscriberCount"\
	)
	out=0
	xmessage -file - -default "okay" -buttons "okay:0,description:10,Show Channel:50,ChannelThumb:20,Thumb:30,Copy:40" <<< "$xmsgtext" || out=$?
	case $out in
	10)
	  sel="description" ;;
	20)
	  #wget -q -O tmp.webp "${uploaderAvatar}"
	  sel="showtmp" ;;
	30)
	  wget -q -O tmp.webp "${thumbnailUrl}"
	  sel="showtmp" ;;
	40)
	  echo "$xmsgtext" >&2
	  sel="";;
	50)
	  prcchannel $(echo $uploaderUrl | sed 's/\/channel\///') || sel=""
	  sel="";;
	*)
#	  echo "\$?: $?"
	  sel=""
	;;
	esac
      ;;
      "exit")
        exit 1
      ;;
    esac
    [ "$sel" == "" ] && sel=$(echo "$actions" | _menu 5 "${title}" )
  done
}

[ "$(type -t ffmpeg_video)" == "function" ] || source ./sh/ffmpeg-video.src
[ "$(type -t view_dash)" == "function" ] || source ./sh/view-dash.src
[ "$(type -t vidinfo)" == "function" ] || source ./sh/vidinfo.src
[ "$(type -t search_video_prcloop)" == "function" ] || source ./sh/search-video-prcloop.src
[ "$(type -t prcchannel)" == "function" ] || source ./sh/prcchannel.src
[ "$(type -t showcomments)" == "function" ] || source ./sh/showcomments.src
[ "$(type -t _menu)" == "function" ]                    || source sh/_menu.src
