#!/bin/sh

getactions(){
  [ "$fved" ] || echo "fview"; echo "next"; echo "view+"; echo "info"; echo "related"; echo "comments"; echo "addto playlist"; echo "exit"
}

poppresel(){
  sed 's/{;}/{!}/' < /dev/stdin
}

prcvideo(){
[ "$1" == "" ] && exit
  nocache="true"
  preselect="${2}"
  tmp=$(poppresel <<< "${preselect}")
  currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
  preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
  vinf=$(_pipedget "streams/$1")

  title=$(jq -r '.title' <<< "${vinf}")
  relstream=""
  sel="${currpresel}"
  [ "$currpresel" == "" ] && sel=$(getactions | _menu 5 "${title}")
  while [ "$sel" != "next" ]
  do
    sel2="$sel"
    sel=""
    case "$sel2" in
      "showtmp")
	_thumbselFull tmp.webp #;sel=""
	rm tmp.webp
	sel="info-show"
      ;;
      "no cache")
	nocache="true";;
      "with cache")
	nocache="";;
      "back")
	sel="";;
      "view")
        stream=$(jq -r '.hls' <<< "${vinf}")
        [ "$nocache" == "" ] || mpv "$stream" --no-cache --no-ytdl
        [ "$nocache" == "" ] && mpv "$stream" --no-ytdl
      ;;
      "view-dash")
	jq -r '.dash' <<< "${vinf}" | view_dash
      ;;
      "fview")
	nocache=""
	preselect="720p0_MPEG_4"
	sel="qualselect"
      ;;
      "qualselect")
        tmp=$(poppresel <<< "${preselect}")
        currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
        preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
	ffmpeg_video "" "" "$nocache" "${currpresel}" <<< "${vinf}" || echo "failed to select quality" >&2
      ;;
      "loop")
	sel=$((echo "qualselect-loop"; echo "listen-loop") | _menu "" "Loop")
      ;;
      "qualselect-loop")
	loops=$(printf -- '-1\n1\n2\n3\n4\n5\n6\n7\n8\n9' | _menu 10 "loops: ")
	ffmpeg_video "" "$loops" "$nocache" <<< "${vinf}" || echo "failed to select quality" >&2
      ;;
      "listen-loop")
        stream=$(jq -r '.audioStreams' <<< "${vinf}" | streamselect | jq -r '.url')
	mpv "$stream" --loop-file=yes --no-ytdl || echo "failed" >&2
      ;;
      "qualselectRip")
	#title
	echo "id: $1" >&2
	titleRip=$(sed 's/\//_/g' <<< "${title}")
	uploaderRip=$(jq -r '.uploader' <<< "${vinf}" | sed 's/\//_/g')
	mkdir -p "saves/$1"
	mkdir -p "saves/_title"
	mkdir -p "saves/_channel/${uploaderRip}"
	ln -s -f "../$1" "saves/_title/${titleRip}"
	ln -s -f "../../$1" "saves/_channel/${uploaderRip}/${titleRip}"
	echo "${vinf}" > "saves/$1/info.json"
	[ -e "videos/$1" ] && ln -s "../../saves/$1" "videos/$1/saved"
	[ -e "saves/$1/$1.mkv" ] && rm "saves/$1/$1.mkv"
	ffmpeg_video "saves/$1/$1.mkv" "" "$nocache" <<< "${vinf}" || echo "failed to select quality" >&2
      ;;
      "view+")
	hls=$(jq -r '.hls' <<< "${vinf}" | sed 's/null//')
	dash=$(jq -r '.dash' <<< "${vinf}" | sed 's/null//')
        tmp=$(poppresel <<< "${preselect}")
        currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
        preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
	sel="${currpresel}"
	[ "$currpresel" == "" ] && sel=$(([ "$hls" == "" ] || echo "view";[ "$dash" == "" ] || echo "view-dash";echo "view&"; echo "qualselect";echo "qualselectRip";echo "listen"; echo "loop";[ "$nocache" == "" ] || echo "with cache";[ "$nocache" == "" ] && echo "no cache"; echo "back";) | _menu 10 "view+")
      ;;
      "listen")
        tmp=$(poppresel <<< "${preselect}")
        currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
	preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
        stream=$(jq -r '.audioStreams' <<< "${vinf}" | streamselect "${currpresel}" | jq -r '.url')
	mpv "${stream}" --no-ytdl || echo "failed" >&2
      ;;
      "listen-gui")
        tmp=$(poppresel <<< "${preselect}")
        currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
	preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
        stream=$(jq -r '.audioStreams' <<< "${vinf}" | streamselect "${currpresel}" | jq -r '.url')
	mpv "${stream}" --no-ytdl --profile=pseudo-gui || echo "failed" >&2
      ;;
      "view&")
        stream=$(jq -r '.hls' <<< "${vinf}")
        mpv "$stream" --no-terminal &
      ;;
      "comments")
	showcomments "$1"
      ;;
      "description")
	xmsgtext=$(vidinfo "$1" "desc"  <<< "${vinf}")
	xmessage -file - -default "okay" -buttons "okay:0,copy:10" <<< "$xmsgtext"
	[ $? -eq 10 ] && echo "$xmsgtext" >&2
      ;;
      "related")
	[ "$relstream" == "" ] && relstream=$(jq -r '.relatedStreams[]' <<< "${vinf}")
	mkdir -p find
	search_video_prcloop <<< "${relstream}"
      ;;
      "addto playlist")
	echo "$1" | addto_playlist
      ;;
      "info")
	relstream=$(jq -r '.relatedStreams[]' <<< "${vinf}")
	uploaderAvatar=$(jq -r '.uploaderAvatar' <<< "${vinf}")
	thumbnailUrl=$(jq -r '.thumbnailUrl' <<< "${vinf}")

	xmsgtext=$(vidinfo "$1" "info"  <<< "${vinf}")
	sel="info-show"
      ;;
      "info-show")
	out=0
	xmessage -file - -default "okay" -buttons "okay:0,description:10,Show Channel:50,ChannelThumb:20,Thumb:30,Copy:40,Share:41" <<< "$xmsgtext" || out=$?
	case $out in
	10)
	  sel="description" ;;
	20)
	  wget -q -O tmp.webp "${uploaderAvatar}"
	  sel="showtmp" ;;
	30)
	  wget -q -O tmp.webp "${thumbnailUrl}"
	  sel="showtmp" ;;
	40)
	  echo "$xmsgtext" | tee /dev/stderr | xclip -selection "clipboard";;
	41)
	  echo -n "https://youtu.be/$1" | tee /dev/stderr | xclip -selection "clipboard";;
	50)
	  bakfved="$fved"
          unset fved
	  prcchannel $(grep "Url: /channel/" <<< "${xmsgtext}" | sed 's/Url: \/channel\///') || sel=""
          fved="$bakfved"
          unset bakfved
	;;
	esac
      ;;
      "exit")
        exit 1
      ;;
    esac
    if [ "$sel" == "" ]; then
      tmp=$(poppresel <<< "${preselect}")
      currpresel=$(awk '{print $1}' FS='{!}' <<< "${tmp}")
      preselect=$(awk '{print $2}' FS='{!}' <<< "${tmp}")
      sel="${currpresel}"
      [ "$currpresel" == "" ] && sel=$(getactions | _menu 5 "${title}" )
    fi
    fved="X"
  done
  unset fved
}

[ "$(type -t ffmpeg_video)" == "function" ] || source ./sh/ffmpeg-video.src
[ "$(type -t view_dash)" == "function" ] || source ./sh/view-dash.src
[ "$(type -t vidinfo)" == "function" ] || source ./sh/vidinfo.src
[ "$(type -t search_video_prcloop)" == "function" ] || source ./sh/search-video-prcloop.src
[ "$(type -t prcchannel)" == "function" ] || source ./sh/prcchannel.src
[ "$(type -t showcomments)" == "function" ] || source ./sh/showcomments.src
[ "$(type -t _menu)" == "function" ]                    || source sh/_menu.src
[ "$(type -t _thumbsel)" == "function" ]            || source sh/_thumbsel.src
[ "$(type -t _pipedget)" == "function" ] || source sh/_pipedget.src
[ "$(type -t create_lplaylist)" == "function" ] || source sh/create-lplaylist.src
